{{- if .Values.n8n.secrets.create }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "n8n.fullname" . }}-secret
  labels:
    {{- include "n8n.labels" . | nindent 4 }}
type: Opaque
data:
  # Database Password
  {{- if and (not .Values.n8n.secrets.database.passwordSecretName) (not .Values.n8n.secrets.database.password) }}
  postgres-password: {{ randAlphaNum 32 | b64enc }}
  {{- else if .Values.n8n.secrets.database.password }}
  postgres-password: {{ .Values.n8n.secrets.database.password | b64enc }}
  {{- end }}
  
  # Redis Password (only if Redis is enabled AND auth is enabled)
  {{- if and .Values.redis.enabled (hasKey .Values.redis "security") .Values.redis.security.authEnabled (not .Values.n8n.secrets.redis.passwordSecretName) }}
  {{- if not .Values.n8n.secrets.redis.password }}
  redis-password: {{ randAlphaNum 32 | b64enc }}
  {{- else }}
  redis-password: {{ .Values.n8n.secrets.redis.password | b64enc }}
  {{- end }}
  {{- end }}
  
  # N8N Basic Auth Password
  {{- if and (not .Values.n8n.secrets.basicAuth.passwordSecretName) (not .Values.n8n.secrets.basicAuth.password) }}
  basic-auth-password: {{ randAlphaNum 24 | b64enc }}
  {{- else if .Values.n8n.secrets.basicAuth.password }}
  basic-auth-password: {{ .Values.n8n.secrets.basicAuth.password | b64enc }}
  {{- end }}
  
  # N8N Encryption Key (32 characters required)
  {{- if and (not .Values.n8n.secrets.encryption.keySecretName) (not .Values.n8n.secrets.encryption.key) }}
  encryption-key: {{ randAlphaNum 32 | b64enc }}
  {{- else if .Values.n8n.secrets.encryption.key }}
  encryption-key: {{ .Values.n8n.secrets.encryption.key | b64enc }}
  {{- end }}
{{- end }}